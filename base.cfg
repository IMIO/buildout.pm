[buildout]
index = http://devpi.imio.be/root/imio/+simple/

extensions =
    mr.developer
allow-picked-versions = false

parts =
    productdistros
    omelette
    instance1
    zopepy
    repozo

# If you want to get the last versions of eggs, you have to comment the line "versions-prod.cfg"
extends =
    https://dist.plone.org/release/4.3.15/versions.cfg
    port.cfg
    versions-base.cfg
    sources.cfg

versions=versions

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://twistedmatrix.com/Releases/Twisted/8.2/Twisted-8.2.0.tar.bz2

auto-checkout =
    Products.PloneMeeting
    imio.pm.locales

always-checkout = force

# Add additional eggs here
# elementtree is required by Plone
eggs =
    Plone
    Pillow
#- hotfix -#
#    Products.PloneHotfix20110720  # <= 3.3.5 , <= 4.0.3
#    Products.PloneHotfix20110531  # <= 3.3.5 , <= 4.0.5
#    Products.PloneHotfix20121106  # <= 4.2.2, <= 4.3a2
#    Products.Zope_Hotfix_20110622  # <= 3.3.5 , <= 4.0.7, <= 4.1rc3
#    Products.PloneHotfix20130618  # <= 4.2.5 , <= 4.3.1
#    Products.PloneHotfix20131210i # <= 4.3.3
# Reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop =

# Use this section to download additional old-style products.
# List any number of URLs for product tarballs under URLs (separate
# with whitespace, or break over several lines, with subsequent lines
# indented). If any archives contain several products inside a top-level
# directory, list the archive file name (i.e. the last part of the URL,
# normally with a .tar.gz suffix or similar) under 'nested-packages'.
# If any archives extract to a product directory with a version suffix, list
# the archive name under 'version-suffix-packages'.

[productdistros]
recipe = plone.recipe.distros
urls =
nested-packages =
version-suffix-packages =

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance1:eggs}
products = ${instance1:products}

[instance1]
recipe = plone.recipe.zope2instance
#effective-user =
user = admin:${port:admin-password}
http-address = ${port:instance1-http}
zserver-threads = 4
debug-mode = off
verbose-security = off
zope-conf-additional =
    %define FILESTORAGE ${buildout:directory}/var/filestorage
    %define BLOBSTORAGE ${buildout:directory}/var/blobstorage
    %include ${buildout:directory}/zope_add.conf
    ${zope-conf:zamqp}
#    <product-config collective.fingerpointing>
#        audit-log ${buildout:directory}/var/log/audit.log
#        audit-log-max-size 10240
#        audit-log-old-files 30
#    </product-config>

environment-vars =
  PYTHON_EGG_CACHE ${buildout:directory}/python-eggs
  zope_i18n_compile_mo_files true
  OO_PORT ${port:oo-port}
  PYTHON_UNO ${port:python-uno}

# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = ${buildout:eggs} my.package
eggs =
    ${buildout:eggs}
    Products.DocFinderTab
    Products.PloneMeeting
    five.z2monitor
    Products.ZNagios
    zc.z3monitor
    collective.upgrade

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml =
# call imio.pm.locales in the pluginprofile.cfg calling base.cfg to override translations!
#    imio.pm.locales
    Products.PloneMeeting-overrides
    five.z2monitor
    Products.ZNagios-zcmonitor
    zc.z3monitor

products =
    ${buildout:directory}/products
    ${productdistros:location}

[debug]
eggs =
    ipdb
    iw.debug
zcml =
    iw.debug

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance1:eggs}
interpreter = zopepy
scripts = zopepy

[repozo]
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo

