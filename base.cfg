[buildout]

extensions =
    mr.developer
allow-picked-versions = false

parts =
    omelette
    repozo
    facts
    zeoserver
    instance1
    instance-amqp
    instance-async

extends =
    https://dist.plone.org/release/4.3.19/versions.cfg
    sources.cfg
    port.cfg
    versions.cfg

versions=versions

find-links =
    http://twistedmatrix.com/Releases/Twisted/8.2/Twisted-8.2.0.tar.bz2
    https://devpi.imio.be/root/imio/+findlinks

always-checkout = force

eggs =
    Plone

develop =

[facts]
recipe = isotoma.recipe.facts

[zeoserver]
recipe = plone.recipe.zeoserver
zeo-address = ${port:zeo}
eggs = ${instance1:eggs}
#effective-user = ${instance1:effective-user}
pack-days = 7
pack-keep-old = false
monitor-address = ${port:zeo-monitor}
zeo-conf-additional =
  %define FILESTORAGE ${buildout:directory}/var/filestorage
  %define BLOBSTORAGE ${buildout:directory}/var/blobstorage
  %include ${buildout:directory}/zeo_add.conf
  %include ${buildout:directory}/zeo_async.conf

[zope-conf]
additional =
  %define ZEOADDRESS ${zeoserver:zeo-address}
  %define ZEOINSTANCE ${buildout:directory}/parts/zeoserver/var
  %define FILESTORAGE ${buildout:directory}/var/filestorage
  %define BLOBSTORAGE ${buildout:directory}/var/blobstorage
  %include ${buildout:directory}/zope_add_zeo.conf
  %include ${buildout:directory}/zope_add_async.conf
amqp =
zamqp =
solr-eggs =

[instance1]
#effective-user =
user = admin:${port:admin-password}
http-address = ${port:instance1-http}
zserver-threads = 4
debug-mode = off
verbose-security = off
recipe = plone.recipe.zope2instance
zeo-client = true
zeo-address = ${zeoserver:zeo-address}
zodb-cache-size = ${port:zodb-cache-size}
zeo-client-cache-size = ${port:zeo-client-cache-size}

shared-blob = on
zope-conf-additional =
  <product-config five.z2monitor>
     bind 0.0.0.0:${port:instance1-monitor}
  </product-config>
  ${zope-conf:additional}
  <clock-server>
      method /${port:plone-path}/@@cron-tick
      period 3600
      user admin
      password ${port:admin-password}
  </clock-server>
  ${zope-conf:zamqp}

zcml-additional =
    <include package="plone.app.async" file="multi_db_instance.zcml" />
environment-vars =
    ZC_ASYNC_UUID ${buildout:directory}/var/instance-uuid.txt

event-log-custom =
    <syslog>
        address ${port:logs-server}
        facility local3
        format %(asctime)s ${facts:hostname} zope[%(process)s]: ${port:cluster} ${:_buildout_section_name_} [%(levelname)s] %(name)s | %(message)s
        dateformat %b %d %H:%M:%S
        level info
    </syslog>
    <logfile>
        path ${buildout:directory}/var/log/${:_buildout_section_name_}.log
        level INFO
    </logfile>

environment-vars =
  PYTHON_EGG_CACHE ${buildout:directory}/python-eggs
  zope_i18n_compile_mo_files true
  OO_PORT ${port:oo-port}
  PYTHON_UNO ${port:python-uno}
  PUBLIC_URL ${port:public-url}
#  FTW_LABELS_PERSONAL_LABELS ['lu']

eggs =
    ${buildout:eggs}
    plone.app.async
    collective.monitor
    Products.DocFinderTab
    Products.PloneMeeting
# backward compat, to be removed after buildout.pm 4.1.17 is released
    Products.PloneMeeting[amqp]
    five.z2monitor
    Products.ZNagios
    zc.z3monitor

zcml =
    Products.PloneMeeting-overrides
    five.z2monitor
    Products.ZNagios-zcmonitor
    zc.z3monitor
    collective.monitor

[instance-async]
<= instance1
http-address = ${port:instance-async-http}
zserver-threads = 4
debug-mode = on
verbose-security = on
zope-conf-additional =
zcml-additional =
    <include package="plone.app.async" file="multi_db_worker.zcml" />
environment-vars =
    ZC_ASYNC_UUID ${buildout:directory}/var/async-uuid.txt
zope-conf-additional =
  <product-config five.z2monitor>
     bind 0.0.0.0:${port:instance-async-monitor}
  </product-config>
  ${zope-conf:additional}
  ${zope-conf:zamqp}

[instance-amqp]
<= instance1
zserver-threads = 1

http-address = ${port:instance-amqp-http}
zope-conf-additional =
  <product-config five.z2monitor>
     bind 0.0.0.0:${port:instance-amqp-monitor}
  </product-config>
  ${zope-conf:additional}
  ${zope-conf:amqp}
  ${zope-conf:zamqp}

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance1:eggs}

[debug]
eggs =
    ipdb
    iw.debug
zcml =
    iw.debug

[repozo]
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo

