On suppose l'installation dans un répertoire /srv/zinstances/mc30
 (qui peut être changé) et sur une distribution ubuntu.
Le nom de votre utilisateur est remplacé dans nos commandes par "votreuser".
 Veuillez utiliser le votre à la place.
Chaque commande, précisée ci-dessous après le symbole ">", peut être exécutée
 (sans taper le symbole >).

On passe d'abord en root
> sudo -s

On installe des librairies nécessaires
> apt-get install build-essential
> apt-get install libreadline6-dev
> apt-get install zlib1g-dev (support zlib)
> apt-get install libjpeg62-dev
> apt-get install subversion
> apt-get install libpq-dev
> apt-get install libxml2-dev
> apt-get install libxslt1-dev
> apt-get install libbz2-dev
> apt-get install git
> apt-get install bzr

Dépendances de documentviewer:
> apt-get install rubygems
> gem install docsplit
> apt-get install graphicsmagick
> apt-get install poppler-utils

On va travailler dans le dossier /srv
> cd /srv

On se met propriétaire du dossier pour ne plus devoir travailler en root
> chown -R votreuser:votreuser .

On quitte l'utilisateur root.
> exit

On crée maintenant une arborescence de dossiers
> mkdir install
> mkdir zinstances
> cd install

On va installer un python2.7.3 qui sera utilisé dans notre buildout
> wget http://www.python.org/ftp/python/2.7.3/Python-2.7.3.tgz
> tar xvzf Python-2.7.3.tgz
> cd Python-2.7.3
> ./configure --prefix=/srv/python273
> make
> make install

On installe l'utilitaire python easy_install
> cd /srv/install
> wget http://peak.telecommunity.com/dist/ez_setup.py
> /srv/python273/bin/python ez_setup.py

On installe l'utilitaire python virtualenv
> /srv/python273/bin/easy_install virtualenv

On définit un cache pour buildout (si ce n'est déjà fait)
Voir http://www.communesplone.org/support/documentation/tutoriels/utilisation-dun-buildout/definition-dun-cache-pour-buildout/

On télécharge le buildout dans un dossier
> cd /srv/zinstances
> svn co http://svn.communesplone.org/svn/communesplone/buildout/server.mc/tags/mc30/ mc30
> cd mc30

On modifie le fichier Makefile pour indiquer le chemin réel de virtualenv.
Pour cela, on peut ouvrir le fichier avec un éditeur de texte.
Il faut remplacer la ligne "virtualenv273 --no-site-packages ." par
    "/srv/python273/bin/virtualenv --no-site-packages ."
OU
On peut créer un lien symbolique vers notre virtualenv sans modifier alors le fichier Makefile
    "sudo ln -s /srv/python273/bin/virtualenv /usr/local/bin/virtualenv-2.7"

On initialise le buildout
> make bootstrap

1) Utilisation en développement (sans ZEO, avec des outils de debug)

Le fichier buildout.cfg utilise par défaut dev.cfg.

On exécute le buildout après chaque modification du fichier buildout.cfg
> make buildout
OU
> bin/buildout -v

On démarre le serveur zope.
> bin/instance1 fg
OU
> bin/instance1 start

On peut se connecter à zope dans un navigateur sur l'adresse http://localhost:8080/manage_main

On peut ajouter un mount point (fichier db séparé à définir dans le fichier zope_add.conf)
=> choisir dans la liste (en haut à droite de la page du navigateur) "ZODB Mount Point"
Sélectionner le nom du mount point désiré ("xxx" et cliquer sur "Create selected mount points").

Tout ce qui va être ajouté dans le dossier "xxx" sera maintenant localisé dans le fichier db "xxx.fs"
 plutôt que dans "Data.fs".

2) Utilisation en production (plusieurs instances Zope pour la même database, ZEO)

Il faut remplacer dans le fichier buildout.cfg l'appel à dev.cfg par prod.cf.

On exécute le buildout après chaque modification du fichier buildout.cfg
> make buildout
OU
> bin/buildout -v

On démarre le serveur ZEO.
> bin/zeoserver start

On démarre chaque instance zope (suivant le nom de la section définie).
> bin/instance1 fg
OU
> bin/instance1 start

On peut se connecter à zope dans un navigateur sur l'adresse http://localhost:8080/manage_main

On peut ajouter un mount point (fichier db séparé à définir dans les fichiers zeo_add.conf et zope_add_zeo.conf)
=> choisir dans la liste (en haut à droite de la page du navigateur) "ZODB Mount Point"
Sélectionner le nom du mount point désiré ("xxx" et cliquer sur "Create selected mount points").

Tout ce qui va être ajouté dans le dossier "xxx" sera maintenant localisé dans le fichier db "xxx.fs"
 plutôt que dans "Data.fs".
